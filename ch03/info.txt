자바스크립트는 1995년 넷스케이프 커뮤니케이션즈의 개발자인 브렌던 아이크가 개발한 프로그래밍 언어이다.

1.변수 선언
데이터 타입을 따로 명시하지 않고 변수를 선언할 수 있다.

스코프 : 어떤 변수들에 접근할 수 있는지 정의한 범위
함수 스코프 : 함수 내부에서 선언되면 해당 함수 내에서만 접근이 가능하고,  함수 밖에서는 접근할 수 없는 범위를 가진 방식
블럭 스코프 : 중괄호 내부에서 선언된 변수는 해당 변수에서만 유효한 범위를 가지는 방식

객체란 키:값 형태로 여러 값을 포함하는 컨테이너

2.객체
자바스크립트에서 객체를 만드는 방법
1)object생성자 함수 사용
2)객체 리터럴 사용
3)직접 정의한 생성자 함수 사용


arr=[1,2,3]
1)map을 이용하여 2,4,6을 출력하시오
const newArr = arr.map((x)=>(x*2))
2)filter를 이용하여 2를 제외한 나머지를 출력하시오
const newArr = arr.filter((x)=>x!==2)
*
희소배열 : 배열원소가 연속적이지 않고 중간에 빈 배열

const obj = {a:1,b:2}
console.log('a'in obj)-->true
console.log('c'in obj)-->false
in은 객체에 특정 프러퍼티가 있는지 확인하는 연산자


const obj2 = [1,2]
console.log(obj2 instanceof Array)-->true
console.log(obj2 instanceof Date)-->false
instanceof는 인스턴스를 판단할 때 사용 


명시적 강제 변환 : 의도적인 타입 변환을 나타낸 것
암시적 강제 변환 : 표현식의 평가 중 타입이 변환되는 것


일급함수의 조건
1)변수에 함수를 할당할 수 있다.
2)함수를 인자로 전달할 수 있다.
3)함수를 반환 값으로 사용할 수 있다.

함수표현식은 호이스팅되기 때무누에 변수에 함수를 할당하기 전에 호출할 수 있다
--> False 
호이스팅되지 않는다.


브라우저 환경에서
function func(){
    console.log(this === window)
}
결과값은 true
전역실행 컨텍스트에서의 this는 항상 전역객체를 참조한다
(전역실행 컨텍스트 : 자바스크립트 엔진이 코드를 실행할 때 처음 생성되는 컨텍스트)
전역객체를 참조하지 않으려면 use strict를 this사용하는 곳 최상단에 추가하면 된다.
this는 반환값을 따로 명시하지 않아도 this에 바인딩한 객체를 반환한다.


화살표함수의 특징
1)변경되지 않는 렉시컬 this를 갖는다.
2)생성자 함수로 사용할 수 없다.
화살표함수는 자신을 둘러싸고 있는 렉시컬 스코프를 렉시컬 this로 참조한다.

*
const obj = new Object()
obj.id ='userId';
--> Object()생성자 함수는 인자 타입에 따라 다른 타입의 럽퍼 객체를 생성하기도 한다.

const obj2= {id:'userId2'}

생성자 함수 사용
function UserInfo(id){
    this.id = id
}
const id = new UserInfo('userId3')
*화살표 함수는 this 바인딩을 하지 않아 생성자 함수로 사용할 수 없다.
