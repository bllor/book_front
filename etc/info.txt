spa(single page application) : 한 개의 페이지로 이뤄진 애플리케이션
하나의 html만 받은 뒤 필요한 영역의 데이터만 요청해서 갱신할 수 있다.

csr(client side rendering): 클라이언트 영역에서 화면을 제어하는 렌더링 방식

spa의 단점
1)애플리케이션의 용량이 커지면 초기 랜더링 속도가 느리다
2)seo최적화가 어렵다

ssr(server side rendering):서버에서 사용자에게 보일 페이지를 모두 구성해 사용자에게 보여주는 방식
장점
1)seo최적화가 쉽다
2)페이지의 전체 콘텐츠가 구성되는 시점이 빠르다.


------------------------------------------------------
프레임워크
1.리액트
페이스북의 엔지니어 조던워크가 ui를 구축하기 위해 만든 자바스크립트 라이브러리
리액트가 프런트엔드 진영에서 인기를 끈 가장 큰 이유는 가상 DOM 때문이다
리액트는 내부적으로 가상의 dom을 만들어 자바스크립트 객체 형태로 추상화해 관리하며, 이 객체와 실제 dom구조를 비교해
변경된 부분만 효율적으로 반영한다.
그리고 가상 dom을 구조화하도록 jsx라는 독자적인 문법을 도입했다.
jsx코드는 babel과 같은 트랜스파일러를 통해 react element를 생성하는 코드로 변경된다.

2.뷰
뷰는 구글출신 개발자가 만든 프레임워크
가상 dom을 사용한다.
template문법을 사용하는데 실제 html과 비슷하여 개발자들이 이해하기 훨씬 쉽다.

3.svelte
프런트엔드 애플리케이션 개발을 위한 컴파일러
svelte는 빌드 시 애플리케이션의 코드를 자바스크립트 코드로 변환하는 자체 컴파일러를 가지며, 이 과정에서
dom 조작에 필요한 코드만 추가로 생성합니다. 즉 개발자가 작성한 코드 외에 dom을 변경하는 코드 또는 반응형 데이터로
데이터를 변경하는 코드가 생성한다
가상dom을 사용하면 메모리 측면에서 불이익이 있고, 직접 dom에 접근해 필요한 부분을 변경하는 것이 더 빠르기에
svelte에서는 가상dom을 사용하지 않는다.